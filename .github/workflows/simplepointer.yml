name: Build

on: [push, pull_request]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        php-versions: ["7.4"]

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Copy .env
        run: php -r "file_exists('.env') || copy('.env.example', '.env');"

      - name: Setup PHP Action
        uses: shivammathur/setup-php@2.4.0 #https://github.com/shivammathur/setup-php
        with:
          php-version: ${{ matrix.php-versions }}

      - name: Get composer cache directory
        id: composercache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Cache composer dependencies
        uses: actions/cache@v2
        with:
          path:
            ${{ steps.composercache.outputs.dir }}
            # Use composer.json for key, if composer.lock is not committed.
            # key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.json') }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install Composer dependencies
        run: composer install -q --no-ansi --no-interaction --no-scripts --no-suggest --no-progress --prefer-dist

      - name: Generate key
        run: php artisan key:generate

      - name: OSKAR-PHP-CS-Fixer
        uses: OskarStark/php-cs-fixer-ga@2.16.4

      # Add a test script to composer.json, for instance: "test": "vendor/bin/phpunit"
      # Docs: https://getcomposer.org/doc/articles/scripts.md

      - name: Create DB and schemas
        env:
            DB_CONNECTION: sqlite
            DB_DATABASE: database/database.sqlite
        run: |
          mkdir -p database
          touch database/database.sqlite
          php artisan migrate --seed

      - name: Run phpstan
        run: composer phpstan

      - name: Run phpunit tests
        env:
            DB_CONNECTION: sqlite
            DB_DATABASE: database/database.sqlite
        run: composer phpstan

      - name: Upgrade Chrome Driver
        run: php artisan dusk:chrome-driver `/opt/google/chrome/chrome --version | cut -d " " -f3 | cut -d "." -f1`

      - name: Start Chrome Driver
        run: ./vendor/laravel/dusk/bin/chromedriver-linux &

      - name: Run Laravel Server
        run: php artisan serve &

      - name: Run Dusk Tests
        env:
          APP_URL: "http://127.0.0.1:8000"
          DB_CONNECTION: sqlite
          DB_DATABASE: database/database.sqlite
        run: php artisan dusk
