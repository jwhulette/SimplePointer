name: Build

on: [push, pull_request]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        php-versions: ["7.4"]

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Copy .env
        run: cp .env.dusk.local .env

      - name: Setup PHP Action
        uses: shivammathur/setup-php@2.9.0 #https://github.com/shivammathur/setup-php
        with:
          php-version: ${{ matrix.php-versions }}
          Extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite
          coverage: none

      - name: Get composer cache directory
        id: composercache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Cache composer dependencies
        uses: actions/cache@v2
        with:
          path:
            ${{ steps.composercache.outputs.dir }}
            # Use composer.json for key, if composer.lock is not committed.
            # key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.json') }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install Dependencies (PHP vendors)
        run: composer install -q --no-ansi --no-interaction --no-scripts --no-suggest --no-progress --prefer-dist

      - name: Generate key
        run: php artisan key:generate

      - name: Run CS Fixer
        uses: OskarStark/php-cs-fixer-ga@2.16.4

      - name: Get npm cache directory
      - uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install front-end dependencies
        run: |
          npm install
          npm run prod

      - name: Put built assets in Artifacts # Save the compiled assets
        uses: actions/upload-artifact@v1
        with:
          name: assets
          path: public

      - name: Create DB and schemas
        run: |
          mkdir -p storage
          touch storage/database.sqlite
          php artisan migrate --seed

      - name: Run phpstan
        run: composer phpstan

      - name: Run PHPUnit tests
        env:
            DB_CONNECTION: sqlite
            DB_DATABASE: database.sqlite
        run: composer phpunit

      - name: Upgrade chrome driver
        run: php artisan dusk:chrome-driver

      - name: Start Chrome Driver
        run: ./vendor/laravel/dusk/bin/chromedriver-linux > /dev/null 2>&1 &

      - name: Run Laravel Server
        run: php artisan serve > /dev/null 2>&1 &

      - name: Run Websockets Server
        run: php artisan websockets:serve > /dev/null 2>&1 &

      - name: Run dusk tests
        run: php artisan dusk
